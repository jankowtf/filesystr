% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{asDirectoryPath,character-method}
\alias{asDirectoryPath,character-method}
\title{As Directory}
\usage{
\S4method{asDirectoryPath}{character}(path = ".", ensure = FALSE, ...)
}
\arguments{
\item{path}{\code{\link{character}}.}

\item{ensure}{\code{logical}.
Ensure Directory existence (\code{TRUE}) or not (\code{FALSE}, default).}

\item{...}{Further arguments passed to:
\code{\link[filesystr]{ensureDirectory}}.}
}
\value{
\code{Directory.S3}. Identical to \code{path} with
   updated class table.
}
\description{
See \code{\link[base]{asDirectoryPath}}
}
\examples{
\dontrun{

## Auxiliary function //
.cleanTempDir <- function(x) {
  if (grepl(basename(tempdir()), x)) {
    unlink(x, recursive = TRUE, force = TRUE)
  }
}

## Path //
path_0 <- file.path(tempdir(), "path")

## character //
res <- asDirectoryPath(path = path_0)
res
class(res)

## Directory.S3 //
res <- asDirectoryPath(path = asDirectoryPath(path_0))
res
class(res)

## Ensure //
file.exists(asDirectoryPath(path = path_0, ensure = TRUE))
.cleanTempDir(x = path_0)

file.exists(
  asDirectoryPath(path = asDirectoryPath(path_0), ensure = TRUE)
)
.cleanTempDir(x = path_0)

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{https://github.com/Rappster/filesystr}
}
\seealso{
\code{
   \link[base]{asDirectoryPath},
  	\link[filesystr]{ensureDirectory}
}
}

