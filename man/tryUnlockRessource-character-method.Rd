% Generated by roxygen2 (4.0.1): do not edit by hand
\docType{methods}
\name{tryUnlockRessource,character-method}
\alias{tryUnlockRessource,character-method}
\title{Manage File System Ressource Lock Status}
\usage{
\S4method{tryUnlockRessource}{character}(path, try_limit = 100,
  strict = FALSE, ...)
}
\arguments{
\item{path}{\code{\link{character}}. File path.}

\item{try_limit}{\code{\link{numeric}}.
Limit for trying to lock ressource.}

\item{strict}{\code{\link{logical}}.
\code{TRUE}: when \code{try_limit} is reached, an error is thrown;
\code{FALSE}: when \code{try_limit} is reached, method returns with \code{FALSE}.}

\item{...}{Further arguments passed to subsequent functions/methods.
In particular:
     \code{\link[filesystr]{isRessourceLocked},
   \link[filesystr]{unlockRessource}}.}
}
\value{
\code{\link{logical}}. \code{TRUE}: lock successful;
   \code{FALSE}: lock failed.
}
\description{
See generic: \code{\link[filesystr]{tryUnlockRessource}}
}
\examples{
\dontrun{

## Example content //
path <- file.path(tempdir(), "test/registry.rdata")
file.create(path)
  
## File //
tryUnlockRessource(path = path, try_limit = 3)
try(tryUnlockRessource(path = path, try_limit = 3, strict = TRUE))
lockRessource(path = path)
tryUnlockRessource(path = path)

## Directory //
path <- dirname(path)
tryUnlockRessource(path = path, try_limit = 3)
try(tryUnlockRessource(path = path, try_limit = 3, strict = TRUE))
lockRessource(path = path)
tryUnlockRessource(path = path)

## Non-existing ressource //
expect_error(tryUnlockRessource(path = "abcd", strict = TRUE))

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://www.rappster.de/rapp/filesystr}
}
\seealso{
\code{
   \link[filesystr]{tryUnlockRessource}
}
}

