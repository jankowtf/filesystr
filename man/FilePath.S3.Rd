% Generated by roxygen2 (4.0.2): do not edit by hand
\name{FilePath.S3}
\alias{FilePath.S3}
\title{Class: FilePath.S3}
\usage{
FilePath.S3(.x, path = NA_character_)
}
\arguments{
\item{.x}{\code{\link{ANY}}. An object of an arbitrary class whose class
attribute should be updated so that it becomes an instance of class
\code{FilePath.S3}. Mainly intended for rapid prototyping
purposes}
}
\value{
Instance of class \code{FilePath.S3}.
}
\description{
File class (S3).
}
\section{Fields}{

\describe{
\item{\code{path}}{\code{\link{character}}. File path.}
}}
\section{Intended use of this class}{


This S3 class, or to be more precise its constructor function, exists mainly
for rapid prototyping purposes.
This is mainly reflected in the fact, that when specifying \code{.x}, this
constructor function will simply update the \code{class} attribute of
whatever object has been provided.

However, it also allows for a more formal OOP-style of rapid
prototyping by offering explicit \emph{class fields} (all arguments except
\code{.x}). Nevertheless, it is probably advisable to switch to an
explicit formal approach such as \emph{S4} and/or \emph{Reference Classes}
once the package or application has reached a certain state of maturity.
}
\examples{
\dontrun{

## Informal use (intended mainly for rapid prototyping) //
## Takes *any* object and simply changes the class attributes
FilePath.S3(tempfile())  
FilePath.S3(rep(tempfile(), 3))  
FilePath.S3(as.list(rep(tempfile(), 3)))
FilePath.S3(TRUE)  

## Formal use (explicitly using 'fields') //
FilePath.S3()
FilePath.S3(path = tempfile())
FilePath.S3(path = rep(tempfile(), 3))
FilePath.S3(path = as.list(rep(tempfile(), 3)))

## Recommended: inlcude namespace //
filesystr::FilePath.S3(tempfile())

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{https://github.com/Rappster/filesystr}
}
\seealso{
\code{
  	\link[filesystr]{DirectoryPath.S3}
}
}

